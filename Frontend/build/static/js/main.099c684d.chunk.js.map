{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Auth/ForgotPassword.module.css","components/Profile/ProfileForm.module.css","components/UI/Modal.module.css","components/Layout/MainNavigation.module.css","pages/HomePage.module.css","components/Profile/UserProfile.module.css","store/authReducer.js","components/UI/Helper.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/Auth/AuthForm.js","pages/AuthPage.js","store/expensesReducer.js","components/AddExpense/EditExpenseForm.js","components/AddExpense/ExpenseList.js","components/AddExpense/ExpenseForm.js","components/AddExpense/NewExpense.js","store/filterReducer.js","components/AddExpense/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/AddExpense/ExpensesChart.js","components/AddExpense/AddExpenseForm.js","pages/HomePage.js","components/UI/Modal.js","components/Auth/ResetPassword.js","App.js","store/redux.js","index.js"],"names":["module","exports","initialAuthState","localStorage","getItem","JSON","parse","token","userId","isLoggedIn","showForgotPasswordModal","showResetPasswordModal","authSlice","createSlice","name","initialState","reducers","login","state","action","payload","setItem","stringify","logout","removeItem","showForgotPassword","hideForgotPassword","showResetPassword","hideResetPassword","actions","Base_URL","MainNavigation","dispatch","useDispatch","navigate","useNavigate","useSelector","auth","_jsxs","className","classes","header","children","_jsx","Link","to","logo","onClick","async","fetch","concat","method","headers","credentials","ok","console","error","Layout","props","Fragment","ProfileForm","newPasswordInputRef","useRef","currentPassInputRef","form","onSubmit","event","preventDefault","currentpassword","current","value","newpassword","response","body","data","json","errorMessage","message","Error","idToken","localId","alert","control","htmlFor","type","id","minLength","ref","UserProfile","profile","AuthForm","emailInputRef","passwordInputRef","otpInputRef","isLogin","setIsLogin","useState","otpSent","setOtpSent","otpToken","setOtpToken","isLoading","setIsLoading","setError","successMessage","setSuccessMessage","success","enteredEmail","enteredPassword","enteredOtp","email","password","accessToken","user","_id","otp","required","disabled","toggle","switchAuthModeHandler","prevState","AuthPage","expensesSlice","expenses","editingExpense","isEditing","showNewExpenseForm","addExpense","push","deleteExpense","filter","expense","updateExpense","index","findIndex","setEditingExpenses","setIsEditing","setShowNewExpenseForm","setExpenses","EditExpenseForm","_ref","EditHandler","editedExpense","setEditedExpense","useEffect","handleChange","e","target","min","step","amount","onChange","description","max","date","newDate","category","ExpenseList","fetchExpenses","expenseCount","setExpenseCount","filteredYear","filteredExpenses","Date","getFullYear","toString","slice","savedCount","parseInt","totalAmount","reduce","total","parseFloat","formatDate","month","toLocaleString","day","year","count","map","err","deleteExpenseHandler","editExpenseHandler","colSpan","style","color","ExpenseForm","setAmount","setDescription","setDate","setCategory","closeForm","log","NewExpense","showForm","openForm","filterSlice","setFilteredYear","ExpensesFilter","options","Array","from","length","_","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","getMonth","AddExpenseForm","loadedExpenses","key","_Fragment","HomePage","styles","homePageContainer","Container","welcomeMessage","Backdrop","backdrop","onClose","ModalOverlay","modal","content","Modal","portalElement","document","getElementById","React","ReactDOM","createPortal","ResetPassword","confirmPasswordInputRef","useParams","setErrorMessage","handleClose","newPassword","Button","variant","App","Routes","Route","path","element","exact","Navigate","replace","store","configureStore","reducer","authReducer","expensesReducer","filterReducer","createRoot","render","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.099c684d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__3vq93\",\"control\":\"AuthForm_control__Ev5Gj\",\"actions\":\"AuthForm_actions__3gPC9\",\"toggle\":\"AuthForm_toggle__2MhoK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-content\":\"ForgotPassword_modal-content__2t8vn\",\"modal-header\":\"ForgotPassword_modal-header__23dZC\",\"modal-title\":\"ForgotPassword_modal-title__EohYw\",\"modal-body\":\"ForgotPassword_modal-body__1ook1\",\"form-group\":\"ForgotPassword_form-group__1aQt5\",\"label\":\"ForgotPassword_label__2fizZ\",\"input\":\"ForgotPassword_input__25Wvo\",\"alert\":\"ForgotPassword_alert__3e_Og\",\"button\":\"ForgotPassword_button__2tbsd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__2hWxR\",\"control\":\"ProfileForm_control__1ECza\",\"action\":\"ProfileForm_action__1nxH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__3wAAs\",\"modal\":\"Modal_modal__3U3AI\",\"content\":\"Modal_content__zuwE6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3VQ_3\",\"logo\":\"MainNavigation_logo__2B_dE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageContainer\":\"HomePage_homePageContainer__3jEtM\",\"welcomeMessage\":\"HomePage_welcomeMessage__2Wn_Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__1FS1Y\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialAuthState = localStorage.getItem(\"authState\")\r\n  ? JSON.parse(localStorage.getItem(\"authState\"))\r\n  : {\r\n      token: null,\r\n      userId: null,\r\n      isLoggedIn: false,\r\n      showForgotPasswordModal: false,\r\n      showResetPasswordModal:false,\r\n      \r\n    };\r\n\r\n// Create auth slice\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.userId;\r\n      state.isLoggedIn = true;\r\n      localStorage.setItem(\"authState\", JSON.stringify(state));\r\n    },\r\n    logout(state) {\r\n      state.token = null;\r\n      state.userId = null;\r\n      state.isLoggedIn = false;\r\n      localStorage.removeItem(\"authState\");\r\n    },\r\n    showForgotPassword(state) {\r\n      state.showForgotPasswordModal = true;\r\n    },\r\n    hideForgotPassword(state) {\r\n      state.showForgotPasswordModal = false;\r\n    },\r\n    showResetPassword(state) {\r\n      state.showResetPasswordModal = true;\r\n    },\r\n    hideResetPassword(state) {\r\n      state.showResetPasswordModal = false;\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const { login, logout, showForgotPassword, hideForgotPassword, showResetPassword, hideResetPassword } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","export const Base_URL= \"https://expense-tracker-gogm.onrender.com\"","import { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../store/authReducer\";\nimport classes from \"./MainNavigation.module.css\";\nimport { Base_URL } from \"../UI/Helper\";\n\n\nconst MainNavigation = () => {\n  const dispatch = useDispatch()\n  \n  const navigate = useNavigate();\n\n  const token = useSelector((state)=> state.auth.token);\n\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  const logoutHandler = async () => {\n    try {\n      const response = await fetch(`${Base_URL}/api/v1/users/logout`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": `Bearer ${token}`, // Include the token here\n        },\n        credentials: \"include\" // Ensures cookies are included in requests\n      });\n\n      if (response.ok) {\n        // Redirect to login page or display a message\n        //console.log(\"logout successfully\")\n        navigate(\"/auth\");\n        dispatch(logout());\n      } else {\n        console.error(\"Failed to log out\");\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    }\n    //dispatch(logout())\n  };\n  \n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Expense Tracker</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef } from 'react';\nimport classes from './ProfileForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/authReducer';\nimport { Base_URL } from '../UI/Helper';\nconst ProfileForm = () => {\n  const newPasswordInputRef = useRef();\n  const currentPassInputRef = useRef();\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const currentpassword = currentPassInputRef.current.value;\n    const newpassword = newPasswordInputRef.current.value;\n    \n  \n    try {\n      const response = await fetch(`${Base_URL}/api/v1/users/changepassword`, {\n        method: 'POST',\n        body: JSON.stringify({\n          currentpassword,\n          newpassword\n        }),\n        headers: {\n          'Content-Type': 'application/json',\n          \"Authorization\": `Bearer ${token}`,\n        },\n        \n      });\n  \n      if (!response.ok) {\n        const data = await response.json();\n        let errorMessage = \"Password update failed!\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      }\n  \n      const data = await response.json();\n      dispatch(login({ token: data.idToken, userId: data.localId }));\n      alert(\"Password has been updated successfully\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  \n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='current-password'>Current Password</label>\n        <input type='password' id='current-password' minLength=\"6\" ref={currentPassInputRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"6\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import { useRef, useState } from \"react\";\nimport { useDispatch } from 'react-redux';\nimport classes from \"./AuthForm.module.css\";\nimport { login } from \"../../store/authReducer\";\nimport { Base_URL } from \"../UI/Helper\";\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const otpInputRef = useRef();\n  const dispatch = useDispatch();\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [otpSent, setOtpSent] = useState(false);\n  const [otpToken, setOtpToken] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n    setOtpSent(false); // Reset OTP sent state when switching\n    setSuccessMessage('');\n    setError('');\n  };\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredOtp = otpInputRef.current ? otpInputRef.current.value : null;\n\n    \n\n    setIsLoading(true);\n    setError(''); // Clear previous errors\n    setSuccessMessage(''); // Clear previous success messages\n\n    if (isLogin) {\n      // Step 1: Login\n      try {\n        const response = await fetch(`${Base_URL}/api/v1/users/login`, {\n          method: \"POST\",\n          body: JSON.stringify({ email: enteredEmail, password: enteredPassword }),\n          headers: { \"Content-Type\": \"application/json\" },\n        });\n        const data = await response.json();\n        if (data.success) {\n          setSuccessMessage(\"Login successful!\");\n          dispatch(login({ token: data.data.accessToken, userId: data.data.user._id, email: data.data.user.email }));\n          // Dispatch login action here, e.g.:\n          // dispatch(authActions.login(data.user));\n        } else {\n          throw new Error(data.message || \"Failed to log in.\");\n        }\n      } catch (error) {\n        setError(error.message);\n      }\n    } else {\n      // Step 2: Register with OTP\n      if (!otpSent) {\n        // Send OTP\n        try {\n          const response = await fetch(`${Base_URL}/api/v1/users/send-otp`, {\n            method: \"POST\",\n            body: JSON.stringify({ email: enteredEmail }),\n            headers: { \"Content-Type\": \"application/json\" },\n          });\n          const data = await response.json();\n          if (data.success) {\n            setOtpSent(true);\n            setOtpToken(data.otpToken);\n            setSuccessMessage(\"OTP sent to your email.\");\n          } else {\n            throw new Error(data.message || \"Failed to send OTP.\");\n          }\n        } catch (error) {\n          setError(error.message);\n        }\n      } else {\n        // Verify OTP and register\n        try {\n          const response = await fetch(`${Base_URL}/api/v1/users/verify-otp`, {\n            method: \"POST\",\n            body: JSON.stringify({\n              email: enteredEmail,\n              password: enteredPassword,\n              otp: enteredOtp,\n              otpToken: otpToken,\n            }),\n            headers: { \"Content-Type\": \"application/json\" },\n          });\n\n          const data = await response.json();\n          if (data.success) {\n            setSuccessMessage(\"Registration successful!\");\n            setIsLogin(true); // Switch to login mode after registration\n          } else {\n            throw new Error(data.message || \"Failed to register.\");\n          }\n        } catch (error) {\n          setError(error.message);\n        }\n      }\n    }\n\n    setIsLoading(false);\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      {error && <p className={classes.error}>{error}</p>}\n      {successMessage && <p className={classes.success}>{successMessage}</p>}\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} disabled={isLoading} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passwordInputRef} disabled={isLoading} />\n        </div>\n        {!isLogin && otpSent && (\n          <div className={classes.control}>\n            <label htmlFor=\"otp\">OTP</label>\n            <input type=\"text\" id=\"otp\" required ref={otpInputRef} disabled={isLoading} />\n          </div>\n        )}\n        {/* {(!isLogin || otpSent) && (\n          <>\n            {!isLogin && (\n              <div className={classes.control}>\n                <label htmlFor=\"confirm-password\">Confirm Password</label>\n                <input type=\"password\" id=\"confirm-password\" required ref={confirmPasswordInputRef} disabled={isLoading} />\n              </div>\n            )}\n          </>\n        )} */}\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button type=\"submit\">{isLogin ? \"Login\" : otpSent ? \"Register\" : \"Send OTP\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button type=\"button\" className={classes.toggle} onClick={switchAuthModeHandler}>\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  expenses: [],\r\n  editingExpense: null,\r\n  isEditing: false,\r\n  showNewExpenseForm: false,\r\n};\r\n\r\nconst expensesSlice = createSlice({\r\n  name: 'expenses',\r\n  initialState,\r\n  reducers: {\r\n    addExpense(state, action) {\r\n      state.expenses.push(action.payload);\r\n    },\r\n    deleteExpense(state, action) {\r\n      state.expenses = state.expenses.filter(expense => expense.id !== action.payload);\r\n    },\r\n    updateExpense(state, action) {\r\n      const index = state.expenses.findIndex(expense => expense.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.expenses[index] = action.payload;\r\n      }\r\n    },\r\n    setEditingExpenses(state, action) {\r\n      state.editingExpense = action.payload;\r\n    },\r\n    setIsEditing(state, action){\r\n      state.isEditing = action.payload;\r\n    },\r\n    setShowNewExpenseForm(state, action) {\r\n      state.showNewExpenseForm = action.payload;\r\n    },\r\n    setExpenses(state, action) {\r\n      state.expenses = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addExpense, deleteExpense, updateExpense, setEditingExpenses, setIsEditing, setExpenses, setShowNewExpenseForm } = expensesSlice.actions;\r\nexport default expensesSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst EditExpenseForm = ({ expense, EditHandler }) => {\r\n  const [editedExpense, setEditedExpense] = useState(expense);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setEditedExpense(expense);\r\n  }, [expense]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedExpense({ ...editedExpense, [name]: value });\r\n  };\r\n  const handleDateChange = (e) => {\r\n    const newDate = e.target.value;\r\n    setEditedExpense({ ...editedExpense, date: newDate });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    EditHandler(editedExpense);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            name=\"amount\"\r\n            required\r\n            value={editedExpense.amount}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            id=\"description\"\r\n            name=\"description\"\r\n            required\r\n            value={editedExpense.description}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2030-12-31\"\r\n            name=\"date\"\r\n            value={editedExpense.date}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\"\r\n            name=\"category\"\r\n            required\r\n            value={editedExpense.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Petrol\">Petrol</option>\r\n            <option value=\"Fitness\">Fitness</option>\r\n            <option value=\"Entertainment\">Entertainment</option>\r\n            <option value=\"Utilities\">Utilities</option>\r\n            <option value=\"Travel\">Travel</option>\r\n            <option value=\"Healthcare\">Healthcare</option>\r\n            <option value=\"Education\">Education</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditExpenseForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEditingExpenses, setIsEditing } from \"../../store/expensesReducer\";\r\nimport \"./ExpenseList.css\";\r\nimport EditExpenseForm from \"./EditExpenseForm\";\r\nimport { Base_URL } from \"../UI/Helper\";\r\n\r\nconst ExpenseList = ({ fetchExpenses }) => {\r\n  const [expenseCount, setExpenseCount] = useState(5); // Default to 5 expenses\r\n  const dispatch = useDispatch();\r\n  const expenses = useSelector((state) => state.expenses.expenses);\r\n  const isEditing = useSelector((state) => state.expenses.isEditing);\r\n  const editingExpense = useSelector((state) => state.expenses.editingExpense);\r\n\r\n  const filteredYear = useSelector((state) => state.filter.filteredYear);\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    const expenseDate = new Date(expense.date);\r\n    return expenseDate.getFullYear().toString() === filteredYear;\r\n  }).slice(0, expenseCount);\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n  //const [expenseCount, setExpenseCount] = useState(5); // Default to 5 expenses\r\n\r\n  useEffect(() => {\r\n    // Retrieve saved preference from local storage on component mount\r\n    const savedCount = localStorage.getItem(\"expenseCount\");\r\n    if (savedCount) {\r\n      setExpenseCount(parseInt(savedCount));\r\n    }\r\n  }, []);\r\n\r\n  const handleExpenseCountChange = (event) => {\r\n    const count = parseInt(event.target.value);\r\n    setExpenseCount(count);\r\n    localStorage.setItem(\"expenseCount\", count); // Save preference to local storage\r\n  };\r\n\r\n  const totalAmount = filteredExpenses.reduce(\r\n    (total, expense) => total + parseFloat(expense.amount),\r\n    0\r\n  );\r\n\r\n  const deleteExpenseHandler = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `${Base_URL}/api/v1/expenses/${id}`,\r\n        {\r\n          method: \"DELETE\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`, // Include the token here\r\n            credentials: \"include\",\r\n          }\r\n        }\r\n        \r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert(\"Expense successfully deleted\");\r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error(\"Failed to delete expense\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const editExpenseHandler = (expense) => {\r\n    dispatch(setEditingExpenses(expense));\r\n    dispatch(setIsEditing(true));\r\n  };\r\n\r\n  const submitEditHandler = async (editedExpense) => {\r\n\r\n    //console.log(editedExpense.date)\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `${Base_URL}/api/v1/expenses/${editedExpense.id}`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            amount: editedExpense.amount,\r\n            description: editedExpense.description,\r\n            date: editedExpense.date,\r\n            category: editedExpense.category,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`, // Include the token here\r\n            credentials: \"include\",\r\n          }\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert(\"Expense successfully updated\");\r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error(\"Failed to update expense\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  \r\n    dispatch(setIsEditing(false));\r\n  };\r\n  const formatDate = (date) => {\r\n    const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = date.getFullYear();\r\n    return { month, day, year };\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-list-container\">\r\n      <h2>Expenses List</h2>\r\n\r\n      <div className=\"expense-count-selector\">\r\n        <label htmlFor=\"expenseCount\">Show expenses:</label>\r\n        <select id=\"expenseCount\" value={expenseCount} onChange={handleExpenseCountChange}>\r\n          {[5, 10, 15, 20].map((count) => (\r\n            <option key={count} value={count}>\r\n              {count}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n\r\n      <table className=\"expense-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <div className=\"date-box-container\">\r\n                <div className=\"date-box\">\r\n                  <div className=\"month\">Month</div>\r\n                  <div className=\"year\">Year</div>\r\n                  <div className=\"day\">Day</div>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredExpenses.map((expense) => (\r\n            <tr key={expense.id}>\r\n              <td>\r\n                <div className=\"date-box-container\">\r\n                  <div className=\"date-box\">\r\n                    <div className=\"month\">\r\n                      {formatDate(new Date(expense.date)).month}\r\n                    </div>\r\n                    <div className=\"year\">\r\n                      {formatDate(new Date(expense.date)).year}\r\n                    </div>\r\n                    <div className=\"day\">\r\n                      {formatDate(new Date(expense.date)).day}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n\r\n              <td>{expense.description}</td>\r\n              <td>Rs{expense.amount}</td>\r\n              <td>{expense.category}</td>\r\n              <td>\r\n                <button onClick={() => deleteExpenseHandler(expense.id)}>\r\n                  Delete\r\n                </button>\r\n                <button onClick={() => editExpenseHandler(expense)}>\r\n                  Edit\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td colSpan=\"2\"></td>\r\n            <td>\r\n              <strong style={{ color: 'white' }}>Total:Rs{totalAmount}</strong>\r\n            </td>\r\n             <td colSpan=\"2\"></td> \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {isEditing && (\r\n        <div className=\"edit-form-container\">\r\n          <h2>Edit Expense</h2>\r\n          <EditExpenseForm\r\n            expense={editingExpense}\r\n            EditHandler={submitEditHandler}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addExpense, setShowNewExpenseForm } from \"../../store/expensesReducer\";\r\nimport \"./ExpenseForm.css\";\r\nimport { Base_URL } from \"../UI/Helper\";\r\n\r\nconst ExpenseForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [category, setCategory] = useState(\"Food\");\r\n\r\n\r\n  const token = useSelector(state=> state.auth.token);\r\n\r\n\r\n  const closeForm = () => {\r\n    dispatch(setShowNewExpenseForm(false));\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    \r\n    event.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        `${Base_URL}/api/v1/expenses/create`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({amount, description, date, category }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Authorization\": `Bearer ${token}`, // Include the token here\r\n            credentials: \"include\",\r\n          },\r\n          \r\n        }\r\n      );\r\n      //.log(\"Response Status:\", response.status);\r\n      //console.log(\"Response Text:\", await response.text());\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        let errorMessage = \"Failed to add expense!\";\r\n        if (data && data.error) {\r\n          errorMessage = data.error;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log(data);\r\n      dispatch(addExpense({ amount, description, date, category }));\r\n      alert(\"Expense added successfully\");\r\n      closeForm();\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            required\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            id=\"description\"\r\n            required\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2030-12-31\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\"\r\n            required\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Petrol\">Petrol</option>\r\n            <option value=\"Fitness\">Fitness</option>\r\n            <option value=\"Entertainment\">Entertainment</option>\r\n            <option value=\"Utilities\">Utilities</option>\r\n            <option value=\"Travel\">Travel</option>\r\n            <option value=\"Healthcare\">Healthcare</option>\r\n            <option value=\"Education\">Education</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={closeForm}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ExpenseForm from \"./ExpenseForm\"\r\nimport './NewExpense.css';\r\nimport { setShowNewExpenseForm } from \"../../store/expensesReducer\";\r\n\r\nconst NewExpense = () =>{\r\n    const dispatch = useDispatch();\r\n    const showForm = useSelector((state) => state.expenses.showNewExpenseForm);\r\n\r\n    const openForm = () =>{\r\n        dispatch(setShowNewExpenseForm(true));\r\n    };\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!showForm && <button onClick={openForm}>Add New Expense</button>}\r\n            {showForm && <ExpenseForm />}\r\n        </div>\r\n    )\r\n};\r\n \r\nexport default NewExpense;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n  filteredYear: 2023,\r\n  filteredExpenses: [],\r\n};\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // addExpense(state, action) {\r\n    //   state.expenses.push(action.payload);\r\n    // },\r\n    // deleteExpense(state, action) {\r\n    //   state.expenses = state.expenses.filter(expense => expense.id !== action.payload);\r\n    // },\r\n    // updateExpense(state, action) {\r\n    //   const index = state.expenses.findIndex(expense => expense.id === action.payload.id);\r\n    //   if (index !== -1) {\r\n    //     state.expenses[index] = action.payload;\r\n    //   }\r\n    // },\r\n    setFilteredYear(state, action) {\r\n      state.filteredYear = action.payload;\r\n    },\r\n    //  setFilteredExpenses(state, action) {\r\n    //      state.filteredExpenses = state.expenses.filter(expense => expense.date.getFullYear().toString()== action.payload);\r\n    //  },\r\n  },\r\n});\r\n\r\nexport const { setFilteredYear } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFilteredYear } from \"../../store/filterReducer\";\r\n\r\nconst ExpensesFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const dropdownChangeHandler = (event) => {\r\n    dispatch(setFilteredYear(event.target.value));\r\n  };\r\n  const filteredYear = useSelector((state) => state.filter.filteredYear);\r\n  \r\n  const options = Array.from({ length: 31 }, (_, index) => 2000 + index);\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={filteredYear} onChange={dropdownChangeHandler}>\r\n        {options.map((year) => (\r\n            <option key={year} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\nconst ChartBar = (props) =>{\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100)+'%';\r\n    }\r\n\r\n    return (<div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nconst Chart = props =>{\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  \r\n\r\n    return ( \r\n    <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint => (\r\n            <ChartBar \r\n             key={dataPoint.label}\r\n             value={dataPoint.value}\r\n             maxValue={totalMaximum}\r\n             label={dataPoint.label}\r\n           />\r\n        ))}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ExpenseChart = props =>{\r\n    const filteredYear = useSelector(state => state.filter.filteredYear);\r\n    const expenses = useSelector(state => state.expenses.expenses);\r\n    const filteredExpenses = expenses.filter(expense => {\r\n        const expenseDate = new Date(expense.date);\r\n        return expenseDate.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan',value:0},\r\n        {label: 'Feb',value:0},\r\n        {label: 'Mar',value:0},\r\n        {label: 'Apr',value:0},\r\n        {label: 'May',value:0},\r\n        {label: 'Jun',value:0},\r\n        {label: 'Jul',value:0},\r\n        {label: 'Aug',value:0},\r\n        {label: 'Sep',value:0},\r\n        {label: 'Oct',value:0},\r\n        {label: 'Nov',value:0},\r\n        {label: 'Dec',value:0},\r\n    ];\r\n\r\n    for(const expense of filteredExpenses){\r\n        const expenseMonth = (new Date(expense.date)).getMonth();\r\n        chartDataPoints[expenseMonth].value += parseFloat(expense.amount);\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpenseChart;","import React, { useEffect } from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport { setExpenses } from \"../../store/expensesReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./AddExpenseForm.css\";\r\nimport NewExpense from \"./NewExpense\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\nimport { Base_URL } from \"../UI/Helper\";\r\n\r\nconst AddExpenseForm = () => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector(state => state.auth.token);\r\n\r\n\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `${Base_URL}/api/v1/expenses/`,{\r\n          method: \"GET\",\r\n        headers: {\r\n          \"Authorization\": `Bearer ${token}`, // Correctly set the header\r\n          credentials: \"include\"\r\n        },\r\n        \r\n      }\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch expenses\");\r\n      }\r\n      const data = await response.json();\r\n      //console.log(data);\r\n      const loadedExpenses = [];\r\n      for (const key in data.data) {\r\n        loadedExpenses.push({\r\n          key: data.data[key]._id,\r\n          id: data.data[key]._id,\r\n          amount: data.data[key].amount,\r\n          description: data.data[key].description,\r\n          date: data.data[key].date,\r\n          category: data.data[key].category,\r\n        });\r\n      }\r\n      //console.log(loadedExpenses)\r\n      dispatch(setExpenses(loadedExpenses));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExpenses();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NewExpense />\r\n      <div className=\"new-expense\">\r\n        <ExpensesFilter />\r\n        <ExpenseChart />\r\n        <ExpenseList fetchExpenses={fetchExpenses} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddExpenseForm;\r\n","import { Container } from \"react-bootstrap\";\r\nimport styles from './HomePage.module.css';\r\nimport AddExpenseForm from \"../components/AddExpense/AddExpenseForm\";\r\n\r\nconst HomePage = () => {\r\n  \r\n  return (\r\n    <>\r\n      <div className={styles.homePageContainer}>\r\n        <Container>\r\n          <div className={styles.welcomeMessage}>\r\n            <p>Welcome to Expense Tracker!!!</p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <AddExpenseForm />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const portalElement = document.getElementById(\"overlays\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useRef, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../UI/Modal\";\r\nimport styles from \"./ForgotPassword.module.css\";\r\nimport { hideResetPassword, showResetPassword } from \"../../store/authReducer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Base_URL } from \"../UI/Helper\";\r\n\r\nconst ResetPassword = () => {\r\n  const newPasswordInputRef = useRef(null);\r\n  const confirmPasswordInputRef = useRef(null);\r\n  const { token } = useParams(); // Extract token from the URL\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const [successMessage, setSuccessMessage] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(hideResetPassword());\r\n\r\n\r\n  };\r\n\r\n  dispatch(showResetPassword());\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const newPassword = newPasswordInputRef.current.value;\r\n    const confirmPassword = confirmPasswordInputRef.current.value;\r\n\r\n    if (newPassword !== confirmPassword) {\r\n      setErrorMessage(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${Base_URL}/api/v1/forgotpass/resetpassword/${token}`, // Send token and password\r\n        {\r\n          method: \"PATCH\",\r\n          body: JSON.stringify({ newPassword }),\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        let errorMessage = data.message || \"Password reset failed.\";\r\n        throw new Error(errorMessage);\r\n      }\r\n\r\n      setSuccessMessage(\"Password reset successfully.\");\r\n      alert(\"Password reset successfully.\");\r\n      navigate(\"/\"); // Redirect to login page\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Modal onClose={handleClose}>\r\n      <form onSubmit={submitHandler} className={styles[\"form-container\"]}>\r\n        <h2>Reset Your Password</h2>\r\n        <div>\r\n          <label htmlFor=\"newpassword\">New Password:</label>\r\n          <input id=\"newpassword\" type=\"password\" required ref={newPasswordInputRef} className={styles[\"input-field\"]} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmpassword\">Confirm Password:</label>\r\n          <input id=\"confirmpassword\" type=\"password\" required ref={confirmPasswordInputRef} className={styles[\"input-field\"]} />\r\n        </div>\r\n        <Button variant=\"success\" type=\"submit\">Reset Password</Button>\r\n        {errorMessage && <p className={styles[\"error-message\"]}>{errorMessage}</p>}\r\n        {successMessage && <p className={styles[\"success-message\"]}>{successMessage}</p>}\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { Route, Routes, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\nimport ResetPassword from \"./components/Auth/ResetPassword\";\n\nfunction App() {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  return (\n    <Layout>\n      <Routes>\n        {isLoggedIn && <Route path=\"/\" element={<HomePage />} exact />}\n        {!isLoggedIn && <Route path=\"/\" element={<AuthPage />} exact />}\n        {!isLoggedIn && (<Route path=\"/auth\" element={<AuthPage />} />)}\n        {isLoggedIn && <Route path=\"/profile\" element={<UserProfile />} />}\n        {!isLoggedIn && <Route path=\"/resetpassword/:token\" element={<ResetPassword />} />}\n        <Route path=\"*\" element={<Navigate replace to=\"/\"/>} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport expensesReducer from \"./expensesReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {auth: authReducer, expenses: expensesReducer, filter: filterReducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);"],"sourceRoot":""}