{"version":3,"sources":["components/Auth/AuthForm.module.css","components/Profile/ProfileForm.module.css","components/UI/Modal.module.css","components/Auth/ForgotPassword.module.css","components/Layout/MainNavigation.module.css","pages/HomePage.module.css","components/Profile/UserProfile.module.css","store/authReducer.js","components/Auth/VerifyEmail.js","components/Layout/MainNavigation.js","components/Layout/Layout.js","components/Profile/ProfileForm.js","components/Profile/UserProfile.js","components/UI/Modal.js","components/Auth/ForgotPassword.js","components/Auth/AuthForm.js","pages/AuthPage.js","store/expensesReducer.js","components/AddExpense/EditExpenseForm.js","components/AddExpense/ExpenseList.js","components/AddExpense/ExpenseForm.js","components/AddExpense/NewExpense.js","store/filterReducer.js","components/AddExpense/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/AddExpense/ExpensesChart.js","components/AddExpense/AddExpenseForm.js","pages/HomePage.js","App.js","store/redux.js","index.js"],"names":["module","exports","initialAuthState","localStorage","getItem","JSON","parse","token","userId","isLoggedIn","showForgotPasswordModal","dummyEmail","authSlice","createSlice","name","initialState","reducers","login","state","action","email","payload","toLowerCase","split","filter","e","charCodeAt","join","setItem","stringify","logout","removeItem","showForgotPassword","hideForgotPassword","actions","VerifyEmailButton","isSending","setIsSending","useState","error","setError","idToken","useSelector","auth","_jsxs","children","_jsx","onClick","async","response","fetch","method","body","requestType","headers","ok","data","json","errorMessage","message","Error","console","log","alert","disabled","MainNavigation","dispatch","useDispatch","className","classes","header","Link","to","logo","logoutHandler","Layout","props","Fragment","ProfileForm","newPasswordInputRef","useRef","form","onSubmit","event","preventDefault","enteredNewPassword","current","value","password","returnSecureToken","localId","control","htmlFor","type","id","minLength","ref","UserProfile","profile","Backdrop","backdrop","onClose","ModalOverlay","modal","content","Modal","portalElement","document","getElementById","React","ReactDOM","createPortal","ForgotPassword","emailInputRef","setErrorMessage","handleClose","styles","enteredEmail","required","Button","variant","AuthForm","passwordInputRef","confirmPasswordInputRef","showModal","isLogin","setIsLogin","isLoading","setIsLoading","enteredPassword","enteredConfirmedPassword","url","toggle","forgotPasswordHandler","switchAuthModeHandler","prevState","AuthPage","expensesSlice","expenses","editingExpense","isEditing","showNewExpenseForm","addExpense","push","deleteExpense","expense","updateExpense","index","findIndex","setEditingExpenses","setIsEditing","setShowNewExpenseForm","setExpenses","EditExpenseForm","_ref","EditHandler","editedExpense","setEditedExpense","useEffect","handleChange","target","min","step","amount","onChange","description","max","date","newDate","category","ExpenseList","fetchExpenses","filteredYear","filteredExpenses","Date","getFullYear","toString","compactedEmail","totalAmount","reduce","total","parseFloat","formatDate","month","toLocaleString","day","year","map","concat","err","deleteExpenseHandler","editExpenseHandler","colSpan","style","color","ExpenseForm","setAmount","setDescription","setDate","setCategory","closeForm","NewExpense","showForm","openForm","filterSlice","setFilteredYear","ExpensesFilter","options","Array","from","length","_","ChartBar","barFillHeight","maxValue","Math","round","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpenseChart","chartDataPoints","getMonth","AddExpenseForm","loadedExpenses","key","_Fragment","HomePage","homePageContainer","Container","welcomeMessage","App","Routes","Route","path","element","exact","Navigate","replace","store","configureStore","reducer","authReducer","expensesReducer","filterReducer","createRoot","render","Provider","BrowserRouter"],"mappings":"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","file":"static/js/main.9f285811.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"AuthForm_auth__1GLcZ\",\"control\":\"AuthForm_control__1FzQt\",\"actions\":\"AuthForm_actions__1cT0S\",\"toggle\":\"AuthForm_toggle__U9awS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ProfileForm_form__30Tc5\",\"control\":\"ProfileForm_control__17f8s\",\"action\":\"ProfileForm_action__7D9gT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__VVWyM\",\"modal\":\"Modal_modal__2-qVl\",\"content\":\"Modal_content__1l4pa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal-content\":\"ForgotPassword_modal-content__1YRWp\",\"modal-header\":\"ForgotPassword_modal-header__3W9C3\",\"modal-title\":\"ForgotPassword_modal-title__3cXeI\",\"modal-body\":\"ForgotPassword_modal-body__20b1f\",\"form-group\":\"ForgotPassword_form-group__vF-k2\",\"label\":\"ForgotPassword_label__1k-HM\",\"input\":\"ForgotPassword_input__1gvZC\",\"alert\":\"ForgotPassword_alert__1Cze-\",\"button\":\"ForgotPassword_button__L2IXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3LKa7\",\"logo\":\"MainNavigation_logo__MqOpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageContainer\":\"HomePage_homePageContainer__3Dn-e\",\"welcomeMessage\":\"HomePage_welcomeMessage__1DaN3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__2qDOh\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst createDummyEmail = (email) => {\r\n  if (!email) return '';\r\n  return email\r\n    .toLowerCase()\r\n    .split(\"\")\r\n    .filter((e) => e.charCodeAt(0) >= 97 && e.charCodeAt(0) <= 122)\r\n    .join(\"\");\r\n};\r\n\r\n\r\nconst initialAuthState = localStorage.getItem(\"authState\")\r\n  ? JSON.parse(localStorage.getItem(\"authState\"))\r\n  : {\r\n      token: null,\r\n      userId: null,\r\n      isLoggedIn: false,\r\n      showForgotPasswordModal: false,\r\n      dummyEmail: '',\r\n    };\r\n\r\n// Create auth slice\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: initialAuthState,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.token = action.payload.token;\r\n      state.userId = action.payload.userId;\r\n      state.dummyEmail = createDummyEmail(action.payload.email);\r\n      state.isLoggedIn = true;\r\n      localStorage.setItem(\"authState\", JSON.stringify(state));\r\n    },\r\n    logout(state) {\r\n      state.token = null;\r\n      state.userId = null;\r\n      state.isLoggedIn = false;\r\n      localStorage.removeItem(\"authState\");\r\n    },\r\n    showForgotPassword(state) {\r\n      state.showForgotPasswordModal = true;\r\n    },\r\n    hideForgotPassword(state) {\r\n      state.showForgotPasswordModal = false;\r\n    },\r\n    \r\n  },\r\n});\r\n\r\nexport const { login, logout, showForgotPassword, hideForgotPassword } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst VerifyEmailButton = () => {\r\n\r\n  const [isSending, setIsSending] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const idToken = useSelector((state) => state.auth.token);\r\n  \r\n\r\n  const sendVerificationEmail = async () => {\r\n    setIsSending(true);\r\n    setError(null);\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyChMLQ7MPabwzdBlznppnvx0u0ClzjW2Sc\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            requestType: \"VERIFY_EMAIL\",\r\n            idToken: idToken,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        let errorMessage = \"Verification failed!\";\r\n        if (data && data.error && data.error.message) {\r\n          errorMessage = data.error.message;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log(data);\r\n      alert(\"Successfully verified\");\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  \r\n    setIsSending(false);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <button onClick={sendVerificationEmail} disabled={isSending}>\r\n        {isSending ? \"Sending...\" : \"Verify Email\"}\r\n      </button>\r\n      {error && <p>Error: {error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmailButton;\r\n","import { Link } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout } from \"../../store/authReducer\";\nimport classes from \"./MainNavigation.module.css\";\nimport VerifyEmailButton from \"../Auth/VerifyEmail\";\n\nconst MainNavigation = () => {\n  const dispatch = useDispatch();\n\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  const logoutHandler = () => {\n    dispatch(logout());\n  };\n  \n  return (\n    <header className={classes.header}>\n      <Link to=\"/\">\n        <div className={classes.logo}>Expense Tracker</div>\n      </Link>\n      <nav>\n        <ul>\n          {!isLoggedIn && (\n            <li>\n              <Link to=\"/auth\">Login</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <Link to=\"/profile\">Profile</Link>\n            </li>\n          )}\n          {isLoggedIn && (\n            <li>\n              <button onClick={logoutHandler}>Logout</button>\n            </li>\n          )}\n          {isLoggedIn && <VerifyEmailButton />}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from 'react';\n\nimport MainNavigation from './MainNavigation';\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { useRef } from 'react';\nimport classes from './ProfileForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../../store/authReducer';\nconst ProfileForm = () => {\n  const newPasswordInputRef = useRef();\n  const token = useSelector(state => state.auth.token);\n  const dispatch = useDispatch();\n\n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n  \n    const enteredNewPassword = newPasswordInputRef.current.value;\n  \n    try {\n      const response = await fetch('https://identitytoolkit.googleapis.com/v1/accounts:update?key=YOUR_API_KEY', {\n        method: 'POST',\n        body: JSON.stringify({\n          idToken: token,\n          password: enteredNewPassword,\n          returnSecureToken: false\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n  \n      if (!response.ok) {\n        const data = await response.json();\n        let errorMessage = \"Password update failed!\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      }\n  \n      const data = await response.json();\n      dispatch(login({ token: data.idToken, userId: data.localId }));\n      alert(\"Password has been updated successfully\");\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n  \n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <div className={classes.control}>\n        <label htmlFor='new-password'>New Password</label>\n        <input type='password' id='new-password' minLength=\"6\" ref={newPasswordInputRef} />\n      </div>\n      <div className={classes.action}>\n        <button>Change Password</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ProfileForm;\n","import ProfileForm from './ProfileForm';\nimport classes from './UserProfile.module.css';\n\nconst UserProfile = () => {\n  return (\n    <section className={classes.profile}>\n      <h1>Your User Profile</h1>\n      <ProfileForm />\n    </section>\n  );\n};\n\nexport default UserProfile;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport classes from \"./Modal.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  return <div className={classes.backdrop} onClick={props.onClose} />;\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Modal = (props) => {\r\n  const portalElement = document.getElementById(\"overlays\");\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {ReactDOM.createPortal(\r\n        <Backdrop onClose={props.onClose} />,\r\n        portalElement\r\n      )}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useRef, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { hideForgotPassword } from \"../../store/authReducer\";\r\nimport Modal from \"../UI/Modal\";\r\nimport styles from \"./ForgotPassword.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst ForgotPassword = () => {\r\n  const emailInputRef = useRef(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    dispatch(hideForgotPassword());\r\n  };\r\n\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    const enteredEmail = emailInputRef.current.value;\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:sendOobCode?key=AIzaSyChMLQ7MPabwzdBlznppnvx0u0ClzjW2Sc\",\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            requestType: \"PASSWORD_RESET\",\r\n            email: enteredEmail,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        let errorMessage = \"Password reset failed. Please try again later.\";\r\n        if (data && data.error && data.error.message) {\r\n          errorMessage = data.error.message;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      console.log(data.email);\r\n      alert(\"An email has been sent to your email\");\r\n      dispatch(hideForgotPassword());\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Modal onClose={handleClose}>\r\n      <form className={styles[\"form-container\"]} onSubmit={submitHandler}>\r\n        <h2>Forgot Password</h2>\r\n        <div>\r\n          <label htmlFor=\"forgotemail\">Email:</label>\r\n          <input\r\n            id=\"forgotemail\"\r\n            type=\"email\"\r\n            required\r\n            ref={emailInputRef}\r\n            className={styles[\"input-field\"]}\r\n          />\r\n          <Button variant=\"info\" type=\"submit\">\r\n            Send link\r\n          </Button>\r\n        </div>\r\n        {errorMessage && <p className={styles[\"error-message\"]}>{errorMessage}</p>}\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;","import { useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, showForgotPassword} from '../../store/authReducer';\nimport classes from \"./AuthForm.module.css\";\nimport ForgotPassword from \"./ForgotPassword\";\n\n\nconst AuthForm = () => {\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n  const confirmPasswordInputRef = useRef();\n\n  const dispatch = useDispatch();\n  const showModal = useSelector(state => state.auth.showForgotPasswordModal);\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  //const [enteredConfirmPassword, setEnteredConfirmPassword] = useState(\"\");\n\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n  const forgotPasswordHandler = () => {\n    dispatch(showForgotPassword());\n  };\n \n  \n\n  const submitHandler = async (event) => {\n    event.preventDefault();\n  \n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n    const enteredConfirmedPassword = confirmPasswordInputRef.current.value;\n  \n    if (!isLogin && enteredPassword !== enteredConfirmedPassword) {\n      alert(\"Passwords do not match.\");\n      return;\n    }\n  \n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyChMLQ7MPabwzdBlznppnvx0u0ClzjW2Sc\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyChMLQ7MPabwzdBlznppnvx0u0ClzjW2Sc\";\n    }\n  \n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: enteredEmail,\n          password: enteredPassword,\n          returnSecureToken: true,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n  \n      if (!response.ok) {\n        const data = await response.json();\n        let errorMessage = \"Authentication failed!\";\n        if (data && data.error && data.error.message) {\n          errorMessage = data.error.message;\n        }\n        throw new Error(errorMessage);\n      }\n  \n      const data = await response.json();\n      alert(\"Login successful\");\n      console.log(data);\n      dispatch(login({ token: data.idToken, userId: data.localId, email: data.email }));\n    } catch (error) {\n      alert(error.message);\n    }\n  \n    setIsLoading(false);\n  };\n  \n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            required\n            ref={passwordInputRef}\n          />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"confirm-password\">Confirm Password</label>\n          <input\n            type=\"password\"\n            id=\"confirm-password\"\n            required\n            ref={confirmPasswordInputRef}\n            //onChange={(event) => setEnteredConfirmPassword(event.target.value)}\n          />\n        </div>\n        <div>\n        <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={forgotPasswordHandler}\n          >\n            Forgot password?\n          </button>\n        </div>\n        <div className={classes.actions}>\n          {!isLoading && (\n            <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          )}\n          {isLoading && <p>Sending request...</p>}\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n\n      {showModal && <ForgotPassword />}\n    </section>\n  );\n};\n\nexport default AuthForm;\n","import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n","\r\n\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  expenses: [],\r\n  editingExpense: null,\r\n  isEditing: false,\r\n  showNewExpenseForm: false,\r\n};\r\n\r\nconst expensesSlice = createSlice({\r\n  name: 'expenses',\r\n  initialState,\r\n  reducers: {\r\n    addExpense(state, action) {\r\n      state.expenses.push(action.payload);\r\n    },\r\n    deleteExpense(state, action) {\r\n      state.expenses = state.expenses.filter(expense => expense.id !== action.payload);\r\n    },\r\n    updateExpense(state, action) {\r\n      const index = state.expenses.findIndex(expense => expense.id === action.payload.id);\r\n      if (index !== -1) {\r\n        state.expenses[index] = action.payload;\r\n      }\r\n    },\r\n    setEditingExpenses(state, action) {\r\n      state.editingExpense = action.payload;\r\n    },\r\n    setIsEditing(state, action){\r\n      state.isEditing = action.payload;\r\n    },\r\n    setShowNewExpenseForm(state, action) {\r\n      state.showNewExpenseForm = action.payload;\r\n    },\r\n    setExpenses(state, action) {\r\n      state.expenses = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const { addExpense, deleteExpense, updateExpense, setEditingExpenses, setIsEditing, setExpenses, setShowNewExpenseForm } = expensesSlice.actions;\r\nexport default expensesSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst EditExpenseForm = ({ expense, EditHandler }) => {\r\n  const [editedExpense, setEditedExpense] = useState(expense);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    setEditedExpense(expense);\r\n  }, [expense]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedExpense({ ...editedExpense, [name]: value });\r\n  };\r\n  const handleDateChange = (e) => {\r\n    const newDate = e.target.value;\r\n    setEditedExpense({ ...editedExpense, date: newDate });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    EditHandler(editedExpense);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            name=\"amount\"\r\n            required\r\n            value={editedExpense.amount}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            id=\"description\"\r\n            name=\"description\"\r\n            required\r\n            value={editedExpense.description}\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2030-12-31\"\r\n            name=\"date\"\r\n            value={editedExpense.date}\r\n            onChange={handleDateChange}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\"\r\n            name=\"category\"\r\n            required\r\n            value={editedExpense.category}\r\n            onChange={handleChange}\r\n          >\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Petrol\">Petrol</option>\r\n            <option value=\"Fitness\">Fitness</option>\r\n            <option value=\"Entertainment\">Entertainment</option>\r\n            <option value=\"Utilities\">Utilities</option>\r\n            <option value=\"Travel\">Travel</option>\r\n            <option value=\"Healthcare\">Healthcare</option>\r\n            <option value=\"Education\">Education</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"submit\">Submit</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EditExpenseForm;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setEditingExpenses, setIsEditing } from \"../../store/expensesReducer\";\r\nimport \"./ExpenseList.css\";\r\nimport EditExpenseForm from \"./EditExpenseForm\";\r\n\r\nconst ExpenseList = ({ fetchExpenses }) => {\r\n  const dispatch = useDispatch();\r\n  const expenses = useSelector((state) => state.expenses.expenses);\r\n  const isEditing = useSelector((state) => state.expenses.isEditing);\r\n  const editingExpense = useSelector((state) => state.expenses.editingExpense);\r\n\r\n  const filteredYear = useSelector((state) => state.filter.filteredYear);\r\n  const filteredExpenses = expenses.filter((expense) => {\r\n    const expenseDate = new Date(expense.date);\r\n    return expenseDate.getFullYear().toString() === filteredYear;\r\n  });\r\n  const compactedEmail = useSelector(state => state.auth.dummyEmail);\r\n\r\n\r\n  const totalAmount = filteredExpenses.reduce(\r\n    (total, expense) => total + parseFloat(expense.amount),\r\n    0\r\n  );\r\n\r\n  const deleteExpenseHandler = async (id) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://expense-tracker-ce1e9-default-rtdb.asia-southeast1.firebasedatabase.app/${compactedEmail}/${id}.json`,\r\n        {\r\n          method: \"DELETE\",\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert(\"Expense successfully deleted\");\r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error(\"Failed to delete expense\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const editExpenseHandler = (expense) => {\r\n    dispatch(setEditingExpenses(expense));\r\n    dispatch(setIsEditing(true));\r\n  };\r\n\r\n  const submitEditHandler = async (editedExpense) => {\r\n    \r\n    try {\r\n      const response = await fetch(\r\n        `https://expense-tracker-ce1e9-default-rtdb.asia-southeast1.firebasedatabase.app/${compactedEmail}/${editedExpense.id}.json`,\r\n        {\r\n          method: \"PUT\",\r\n          body: JSON.stringify({\r\n            amount: editedExpense.amount,\r\n            description: editedExpense.description,\r\n            date: editedExpense.date,\r\n            category: editedExpense.category,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (response.ok) {\r\n        alert(\"Expense successfully updated\");\r\n        fetchExpenses();\r\n      } else {\r\n        throw new Error(\"Failed to update expense\");\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  \r\n    dispatch(setIsEditing(false));\r\n  };\r\n  const formatDate = (date) => {\r\n    const month = date.toLocaleString(\"en-US\", { month: \"long\" });\r\n    const day = date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n    const year = date.getFullYear();\r\n    return { month, day, year };\r\n  };\r\n\r\n  return (\r\n    <div className=\"expense-list-container\">\r\n      <h2>Expenses List</h2>\r\n      <table className=\"expense-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <div className=\"date-box-container\">\r\n                <div className=\"date-box\">\r\n                  <div className=\"month\">Month</div>\r\n                  <div className=\"year\">Year</div>\r\n                  <div className=\"day\">Day</div>\r\n                </div>\r\n              </div>\r\n            </th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n            <th>Category</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredExpenses.map((expense) => (\r\n            <tr key={expense.id}>\r\n              <td>\r\n                <div className=\"date-box-container\">\r\n                  <div className=\"date-box\">\r\n                    <div className=\"month\">\r\n                      {formatDate(new Date(expense.date)).month}\r\n                    </div>\r\n                    <div className=\"year\">\r\n                      {formatDate(new Date(expense.date)).year}\r\n                    </div>\r\n                    <div className=\"day\">\r\n                      {formatDate(new Date(expense.date)).day}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n\r\n              <td>{expense.description}</td>\r\n              <td>Rs{expense.amount}</td>\r\n              <td>{expense.category}</td>\r\n              <td>\r\n                <button onClick={() => deleteExpenseHandler(expense.id)}>\r\n                  Delete\r\n                </button>\r\n                <button onClick={() => editExpenseHandler(expense)}>\r\n                  Edit\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td colSpan=\"2\"></td>\r\n            <td>\r\n              <strong style={{ color: 'white' }}>Total:Rs{totalAmount}</strong>\r\n            </td>\r\n             <td colSpan=\"2\"></td> \r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      {isEditing && (\r\n        <div className=\"edit-form-container\">\r\n          <h2>Edit Expense</h2>\r\n          <EditExpenseForm\r\n            expense={editingExpense}\r\n            EditHandler={submitEditHandler}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addExpense, setShowNewExpenseForm } from \"../../store/expensesReducer\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [category, setCategory] = useState(\"Food\");\r\n\r\n\r\n  const compactedEmail = useSelector(state => state.auth.dummyEmail);\r\n\r\n  const closeForm = () => {\r\n    dispatch(setShowNewExpenseForm(false));\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    console.log(compactedEmail);\r\n    event.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch(\r\n        `https://expense-tracker-ce1e9-default-rtdb.asia-southeast1.firebasedatabase.app/${compactedEmail}.json`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify({\r\n            amount: amount,\r\n            description: description,\r\n            date: date,\r\n            category: category,\r\n          }),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n  \r\n      if (!response.ok) {\r\n        const data = await response.json();\r\n        let errorMessage = \"Failed to add expense!\";\r\n        if (data && data.error) {\r\n          errorMessage = data.error;\r\n        }\r\n        throw new Error(errorMessage);\r\n      }\r\n  \r\n      const data = await response.json();\r\n      dispatch(addExpense({ id: data.name, amount, description, date, category }));\r\n      alert(\"Expense added successfully\");\r\n      closeForm();\r\n    } catch (error) {\r\n      alert(error.message);\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"amount\">Amount</label>\r\n          <input\r\n            id=\"amount\"\r\n            type=\"number\"\r\n            min=\"1\"\r\n            step=\"1\"\r\n            required\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"description\">Description</label>\r\n          <input\r\n            id=\"description\"\r\n            required\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2030-12-31\"\r\n            value={date}\r\n            onChange={(e) => setDate(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"category\">Category</label>\r\n          <select\r\n            id=\"category\"\r\n            required\r\n            value={category}\r\n            onChange={(e) => setCategory(e.target.value)}\r\n          >\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Petrol\">Petrol</option>\r\n            <option value=\"Fitness\">Fitness</option>\r\n            <option value=\"Entertainment\">Entertainment</option>\r\n            <option value=\"Utilities\">Utilities</option>\r\n            <option value=\"Travel\">Travel</option>\r\n            <option value=\"Healthcare\">Healthcare</option>\r\n            <option value=\"Education\">Education</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"new-expense__actions\">\r\n          <button type=\"button\" onClick={closeForm}>\r\n            Cancel\r\n          </button>\r\n          <button type=\"submit\">Add Expense</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport ExpenseForm from \"./ExpenseForm\"\r\nimport './NewExpense.css';\r\nimport { setShowNewExpenseForm } from \"../../store/expensesReducer\";\r\n\r\nconst NewExpense = () =>{\r\n    const dispatch = useDispatch();\r\n    const showForm = useSelector((state) => state.expenses.showNewExpenseForm);\r\n\r\n    const openForm = () =>{\r\n        dispatch(setShowNewExpenseForm(true));\r\n    };\r\n    return (\r\n        <div className=\"new-expense\">\r\n            {!showForm && <button onClick={openForm}>Add New Expense</button>}\r\n            {showForm && <ExpenseForm />}\r\n        </div>\r\n    )\r\n};\r\n \r\nexport default NewExpense;","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst initialState = {\r\n  filteredYear: 2023,\r\n  filteredExpenses: [],\r\n};\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState,\r\n\r\n  reducers: {\r\n    // addExpense(state, action) {\r\n    //   state.expenses.push(action.payload);\r\n    // },\r\n    // deleteExpense(state, action) {\r\n    //   state.expenses = state.expenses.filter(expense => expense.id !== action.payload);\r\n    // },\r\n    // updateExpense(state, action) {\r\n    //   const index = state.expenses.findIndex(expense => expense.id === action.payload.id);\r\n    //   if (index !== -1) {\r\n    //     state.expenses[index] = action.payload;\r\n    //   }\r\n    // },\r\n    setFilteredYear(state, action) {\r\n      state.filteredYear = action.payload;\r\n    },\r\n    //  setFilteredExpenses(state, action) {\r\n    //      state.filteredExpenses = state.expenses.filter(expense => expense.date.getFullYear().toString()== action.payload);\r\n    //  },\r\n  },\r\n});\r\n\r\nexport const { setFilteredYear } = filterSlice.actions;\r\nexport default filterSlice.reducer;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setFilteredYear } from \"../../store/filterReducer\";\r\n\r\nconst ExpensesFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const dropdownChangeHandler = (event) => {\r\n    dispatch(setFilteredYear(event.target.value));\r\n  };\r\n  const filteredYear = useSelector((state) => state.filter.filteredYear);\r\n  \r\n  const options = Array.from({ length: 31 }, (_, index) => 2000 + index);\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={filteredYear} onChange={dropdownChangeHandler}>\r\n        {options.map((year) => (\r\n            <option key={year} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport './ChartBar.css';\r\nconst ChartBar = (props) =>{\r\n    let barFillHeight = '0%';\r\n\r\n    if(props.maxValue > 0){\r\n        barFillHeight = Math.round((props.value / props.maxValue)*100)+'%';\r\n    }\r\n\r\n    return (<div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n    );\r\n\r\n};\r\n\r\nexport default ChartBar;","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css';\r\n\r\nconst Chart = props =>{\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n  \r\n\r\n    return ( \r\n    <div className=\"chart\">\r\n        {props.dataPoints.map(dataPoint => (\r\n            <ChartBar \r\n             key={dataPoint.label}\r\n             value={dataPoint.value}\r\n             maxValue={totalMaximum}\r\n             label={dataPoint.label}\r\n           />\r\n        ))}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst ExpenseChart = props =>{\r\n    const filteredYear = useSelector(state => state.filter.filteredYear);\r\n    const expenses = useSelector(state => state.expenses.expenses);\r\n    const filteredExpenses = expenses.filter(expense => {\r\n        const expenseDate = new Date(expense.date);\r\n        return expenseDate.getFullYear().toString() === filteredYear;\r\n    });\r\n\r\n    const chartDataPoints = [\r\n        {label: 'Jan',value:0},\r\n        {label: 'Feb',value:0},\r\n        {label: 'Mar',value:0},\r\n        {label: 'Apr',value:0},\r\n        {label: 'May',value:0},\r\n        {label: 'Jun',value:0},\r\n        {label: 'Jul',value:0},\r\n        {label: 'Aug',value:0},\r\n        {label: 'Sep',value:0},\r\n        {label: 'Oct',value:0},\r\n        {label: 'Nov',value:0},\r\n        {label: 'Dec',value:0},\r\n    ];\r\n\r\n    for(const expense of filteredExpenses){\r\n        const expenseMonth = (new Date(expense.date)).getMonth();\r\n        chartDataPoints[expenseMonth].value += parseFloat(expense.amount);\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints} />\r\n}\r\n\r\nexport default ExpenseChart;","import React, { useEffect } from \"react\";\r\nimport ExpenseList from \"./ExpenseList\";\r\nimport { setExpenses } from \"../../store/expensesReducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./AddExpenseForm.css\";\r\nimport NewExpense from \"./NewExpense\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseChart from \"./ExpensesChart\";\r\n\r\nconst AddExpenseForm = () => {\r\n  const dispatch = useDispatch();\r\n  const compactedEmail = useSelector(state => state.auth.dummyEmail);\r\n  console.log(compactedEmail);\r\n\r\n\r\n  const fetchExpenses = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://expense-tracker-ce1e9-default-rtdb.asia-southeast1.firebasedatabase.app/${compactedEmail}.json`\r\n      );\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch expenses\");\r\n      }\r\n      const data = await response.json();\r\n      const loadedExpenses = [];\r\n      for (const key in data) {\r\n        loadedExpenses.push({\r\n          id: key,\r\n          amount: data[key].amount,\r\n          description: data[key].description,\r\n          date: data[key].date,\r\n          category: data[key].category,\r\n        });\r\n      }\r\n      dispatch(setExpenses(loadedExpenses));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchExpenses();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NewExpense />\r\n      <div className=\"new-expense\">\r\n        <ExpensesFilter />\r\n        <ExpenseChart />\r\n        <ExpenseList fetchExpenses={fetchExpenses} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddExpenseForm;\r\n","import { Container } from \"react-bootstrap\";\r\nimport styles from './HomePage.module.css';\r\nimport AddExpenseForm from \"../components/AddExpense/AddExpenseForm\";\r\n\r\nconst HomePage = () => {\r\n  \r\n  return (\r\n    <>\r\n      <div className={styles.homePageContainer}>\r\n        <Container>\r\n          <div className={styles.welcomeMessage}>\r\n            <p>Welcome to Expense Tracker!!!</p>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n      <AddExpenseForm />\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { Route, Routes, Navigate } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport Layout from \"./components/Layout/Layout\";\nimport UserProfile from \"./components/Profile/UserProfile\";\nimport AuthPage from \"./pages/AuthPage\";\nimport HomePage from \"./pages/HomePage\";\n\nfunction App() {\n  const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n  return (\n    <Layout>\n      <Routes>\n        {isLoggedIn && <Route path=\"/\" element={<HomePage />} exact />}\n        {!isLoggedIn && <Route path=\"/\" element={<AuthPage />} exact />}\n        {!isLoggedIn && (<Route path=\"/auth\" element={<AuthPage />} />)}\n        {isLoggedIn && <Route path=\"/profile\" element={<UserProfile />} />}\n        <Route path=\"*\" element={<Navigate replace to=\"/\"/>} />\n      </Routes>\n    </Layout>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport expensesReducer from \"./expensesReducer\";\r\nimport filterReducer from \"./filterReducer\";\r\n\r\nconst store = configureStore({\r\n    reducer: {auth: authReducer, expenses: expensesReducer, filter: filterReducer },\r\n});\r\n\r\nexport default store;\r\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/redux\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);"],"sourceRoot":""}